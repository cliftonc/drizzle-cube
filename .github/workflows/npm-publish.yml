name: Publish to NPM

on:
  release:
    types: [created]

jobs:
  publish:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: drizzle_cube_test
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_DATABASE: drizzle_cube_test
          MYSQL_USER: test
          MYSQL_PASSWORD: test
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run typecheck

      - name: Build packages
        run: npm run build

      - name: Wait for databases
        run: |
          timeout 60 bash -c 'until nc -z localhost 5433; do echo "Waiting for PostgreSQL..."; sleep 1; done'
          timeout 60 bash -c 'until nc -z localhost 3307; do echo "Waiting for MySQL..."; sleep 1; done'

      - name: Run tests (PostgreSQL)
        run: npm test
        env:
          TEST_DB_TYPE: postgres
          TEST_DATABASE_URL: postgres://test:test@localhost:5433/drizzle_cube_test

      - name: Run tests (MySQL)  
        run: npm test
        env:
          TEST_DB_TYPE: mysql
          MYSQL_TEST_DATABASE_URL: mysql://test:test@localhost:3307/drizzle_cube_test

      - name: Run tests (SQLite)
        run: npm test
        env:
          TEST_DB_TYPE: sqlite

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}